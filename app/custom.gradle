import java.security.SecureRandom

File devTopSecretPropsFile = file("src/main/resources/application-dev-top-secret.properties")
// We'll only run the following if the file doesn't already exist (only necessary for developer environments)
tasks.register('generateDevTopSecretProps', WriteProperties) {
    description("Generate secret property values for a development environment.")
    destinationFile.set(devTopSecretPropsFile)
    encoding("UTF-8")
    comment("Generated by build.gradle on ${ZonedDateTime.now().format('MMM d, yyyy @ HH:mm z')}. To regenerate this file, delete it, and rerun gradle.\n\n"
            + "Top secret values for a development environment. Do not store these values in VCS.")
    String randVals = (('a'..'z')).join() + (('A'..'Z')).join() + (('0'..'9')).join()
    property("micronaut.security.token.jwt.generator.refresh-token.secret", new SecureRandom().with { (1..60).collect { randVals[nextInt(randVals.length())] }.join() })
    property("micronaut.security.token.jwt.signatures.secret.generator.secret", new SecureRandom().with { (1..60).collect { randVals[nextInt(randVals.length())] }.join() })
}
// Ensure application-dev-top-secret.properties is initialized (only necessary for developer environments)
if (!devTopSecretPropsFile.exists()) {
    println('Generating top secret developer properties file because it does not exist')
    tasks.processResources.dependsOn(generateDevTopSecretProps)
    tasks.inspectRuntimeClasspath.dependsOn(generateDevTopSecretProps)
}

dockerfileNative {
    // See https://micronaut-projects.github.io/micronaut-gradle-plugin/latest/index.html#_architecture_considerations
    graalArch.set("x64")
}

dockerBuild {
    platform = "linux/amd64"
}
dockerBuildNative {
    platform = "linux/amd64"
}
optimizedDockerBuildNative {
    platform = "linux/amd64"
}
